<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="379f0352-c00b-464c-8853-cc7dfa64bbe1" name="Default Changelist" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/package/__tests__/integration.spec.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/package/__tests__/integration.spec.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/package/core/Builder/Content/ContentBuilder.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/package/builders/Content/ContentBuilder.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/package/core/Builder/Content/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/package/builders/Content/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/package/core/Builder/Footer/FooterBuilder.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/package/builders/Footer/FooterBuilder.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/package/core/Builder/Footer/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/package/builders/Footer/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/package/core/Builder/Header/HeaderBuilder.spec.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/package/builders/Header/HeaderBuilder.spec.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/package/core/Builder/Header/HeaderBuilder.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/package/builders/Header/HeaderBuilder.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/package/core/Builder/Header/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/package/builders/Header/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/package/core/Builder/Inset/InsetBuilder.spec.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/package/builders/Inset/InsetBuilder.spec.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/package/core/Builder/Inset/InsetBuilder.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/package/builders/Inset/InsetBuilder.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/package/core/Builder/Inset/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/package/builders/Inset/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/package/core/Builder/LayoutBuilder.spec.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/package/builders/LayoutBuilder.spec.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/package/core/Builder/LayoutBuilder.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/package/builders/LayoutBuilder.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/package/core/Builder/Sidebar/SidebarBuilder.spec.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/package/builders/Sidebar/SidebarBuilder.spec.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/package/core/Builder/Sidebar/SidebarBuilder.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/package/builders/Sidebar/SidebarBuilder.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/package/core/Builder/Sidebar/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/package/builders/Sidebar/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/package/core/Builder/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/package/builders/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/package/core/Context/LayoutContext.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/package/core/Context/LayoutContext.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/package/core/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/package/core/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/package/models/Header/HeaderModel.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/package/models/Header/HeaderModel.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/package/types/Config.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/package/types/Config.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/package/types/Context.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/package/types/Context.ts" afterDir="false" />
    </list>
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="CoverageViewManager">
    <option name="myElementSize" value="267" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="JavaScript File" />
        <option value="tsconfig.json" />
        <option value="TypeScript File" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectId" id="1aM0BiRPXPqkfasDQqtX8WQG0ls" />
  <component name="PropertiesComponent">
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/src/package/core/Builder/Sidebar" />
    <property name="node.js.detected.package.eslint" value="true" />
    <property name="node.js.detected.package.tslint" value="true" />
    <property name="node.js.path.for.package.eslint" value="project" />
    <property name="node.js.path.for.package.tslint" value="project" />
    <property name="node.js.selected.package.eslint" value="(autodetect)" />
    <property name="node.js.selected.package.tslint" value="(autodetect)" />
    <property name="nodejs.jest.jest_package" value="$PROJECT_DIR$/node_modules/jest" />
    <property name="nodejs_interpreter_path.stuck_in_default_project" value="undefined stuck path" />
    <property name="nodejs_npm_path_reset_for_default_project" value="true" />
    <property name="nodejs_package_manager_path" value="yarn" />
    <property name="prettierjs.PrettierConfiguration.Package" value="$PROJECT_DIR$/node_modules/prettier" />
    <property name="settings.editor.selected.configurable" value="settings.typescriptcompiler" />
    <property name="ts.external.directory.path" value="$PROJECT_DIR$/node_modules/typescript/lib" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/src/package/core/Builder/Sidebar" />
      <recent name="$PROJECT_DIR$/src/package/core/Builder/Header" />
      <recent name="$PROJECT_DIR$/src/package/core/Builder/Content" />
      <recent name="$PROJECT_DIR$/src/package/components" />
      <recent name="$PROJECT_DIR$/src/package/utils" />
    </key>
    <key name="es6.move.members.recent.items">
      <recent name="$PROJECT_DIR$/src/package/types/Builder.ts" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/src/package" />
      <recent name="$PROJECT_DIR$/src/package/effects" />
      <recent name="$PROJECT_DIR$/src/package/components/DrawerSidebar/Persistent" />
      <recent name="$PROJECT_DIR$/src/package/components/DrawerSidebar" />
      <recent name="$PROJECT_DIR$/src/package/effects/Header" />
    </key>
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Jest.All Tests">
    <configuration name="All Tests" type="JavaScriptTestRunnerJest" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <jest-options value="--watchAll" />
      <envs />
      <scope-kind value="ALL" />
      <method v="2" />
    </configuration>
    <configuration name="HeaderModel.return correct style" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <jest-options value="--watchAll" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/src/package/models/Header/HeaderModel.spec.ts" />
      <test-names>
        <test-name value="HeaderModel" />
        <test-name value="return correct style" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="SidebarListEffect.return correct style for anchor left + right" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <jest-options value="--watchAll" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/src/package/effects/SidebarList/SidebarListEffect.spec.ts" />
      <test-names>
        <test-name value="SidebarListEffect" />
        <test-name value="return correct style for anchor left + right" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration default="true" type="JavaScriptTestRunnerJest">
      <node-interpreter value="project" />
      <node-options value="" />
      <working-dir value="" />
      <jest-options value="--watchAll" />
      <envs />
      <scope-kind value="ALL" />
      <method v="2" />
    </configuration>
    <configuration name="createHiddenStyles.create media queries with display none" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <jest-options value="--watchAll" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/src/package/utils/utils.spec.ts" />
      <test-names>
        <test-name value="createHiddenStyles" />
        <test-name value="create media queries with display none" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="createHiddenStyles.getHiddenRange" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <jest-options value="--watchAll" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/src/package/utils/utils.spec.ts" />
      <test-names>
        <test-name value="createHiddenStyles" />
        <test-name value="getHiddenRange" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="mapWidthToScreen" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <jest-options value="--watchAll" />
      <envs />
      <scope-kind value="SUITE" />
      <test-file value="$PROJECT_DIR$/src/package/utils/utils.spec.ts" />
      <test-names>
        <test-name value="mapWidthToScreen" />
      </test-names>
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Jest.All Tests" />
      <item itemvalue="Jest.HeaderModel.return correct style" />
      <item itemvalue="Jest.createHiddenStyles.getHiddenRange" />
      <item itemvalue="Jest.createHiddenStyles.create media queries with display none" />
      <item itemvalue="Jest.SidebarListEffect.return correct style for anchor left + right" />
      <item itemvalue="Jest.mapWidthToScreen" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Jest.mapWidthToScreen" />
        <item itemvalue="Jest.SidebarListEffect.return correct style for anchor left + right" />
        <item itemvalue="Jest.createHiddenStyles.getHiddenRange" />
        <item itemvalue="Jest.createHiddenStyles.create media queries with display none" />
        <item itemvalue="Jest.HeaderModel.return correct style" />
      </list>
    </recent_temporary>
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="379f0352-c00b-464c-8853-cc7dfa64bbe1" name="Default Changelist" comment="" />
      <created>1586516864018</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1586516864018</updated>
      <workItem from="1586516865314" duration="2208000" />
      <workItem from="1586530023491" duration="21475000" />
      <workItem from="1586579855987" duration="226000" />
      <workItem from="1586580186913" duration="75659000" />
      <workItem from="1586916322167" duration="21687000" />
      <workItem from="1587083415994" duration="4897000" />
      <workItem from="1587133021968" duration="32813000" />
      <workItem from="1587311293976" duration="4740000" />
      <workItem from="1587394766422" duration="13172000" />
      <workItem from="1587478552821" duration="5776000" />
      <workItem from="1587485970660" duration="2273000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
    <option name="exactExcludedFiles">
      <list>
        <option value="$USER_HOME$/ThoughtWorks/sh-ktr-mobile/node_modules/wait-for-expect/lib/index.d.js" />
        <option value="$USER_HOME$/ThoughtWorks/sh-ktr-mobile/node_modules/wait-for-expect/lib/toBeInRangeMatcher.d.js" />
        <option value="$USER_HOME$/ThoughtWorks/sh-ktr-mobile/node_modules/wait-for-expect/lib/waitForExpect.spec.d.js" />
        <option value="$USER_HOME$/ThoughtWorks/sh-ktr-mobile/node_modules/react-native-svg/src/index.d.ts" />
      </list>
    </option>
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="COLUMN_ORDER" />
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/gatsby_mui_layout$HeaderModel_return_correct_style.info" NAME="HeaderModel.return correct style Coverage Results" MODIFIED="1586626840493" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="JestJavaScriptTestRunnerCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
  </component>
</project>